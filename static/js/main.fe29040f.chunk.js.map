{"version":3,"sources":["components/ContactItem/contactItem.module.css","components/ContactForm/contactForm.module.css","components/ContactForm/contactForm.jsx","components/ContactItem/contactItem.jsx","components/ContactsList/contactsList.jsx","components/Filter/filter.jsx","App.js","reportWebVitals.js","index.js","components/Filter/filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","message","className","s","contact__form","this","contact__label","contact__input","onChange","type","pattern","title","required","contact__btn","Component","ContactItem","id","onDeleteContact","contact__item","onClick","ContactsList","contacts","map","Filter","filter__label","filter__name","filter__input","App","filter","addContact","uuidv4","deleteContact","contactId","prevState","contact","handlerOnSubmit","newContacts","includes","alert","newContactsList","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","window","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe29040f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"contactItem_contact__item__1XLoX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"contactForm_contact__form__1azPO\",\"contact__label\":\"contactForm_contact__label__b6iiC\",\"contact__input\":\"contactForm_contact__input__1f49u\",\"contact__btn\":\"contactForm_contact__btn__32VlZ\"};","import { Component } from 'react';\r\nimport s from './contactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({ ...this.state });\r\n    this.setState({ message: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contact__form} onSubmit={this.handleSubmit}>\r\n        <h3 className={s.contact__label}>Name</h3>\r\n        <input\r\n          className={s.contact__input}\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n        />\r\n        <h3 className={s.contact__label}>Number</h3>\r\n        <input\r\n          className={s.contact__input}\r\n          onChange={this.handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n        />\r\n        <button className={s.contact__btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './contactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.contact__item}>\r\n      {name}:{}\r\n      {number}\r\n      <button\r\n        type=\"button\"\r\n        className=\"TodoList__btn\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem/contactItem';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.filter__label}>\r\n    <h3 className={s.filter__name}>Find contacts by name</h3>\r\n    <input\r\n      className={s.filter__input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { v4 as uuidv4 } from 'uuid';\nimport { Component } from 'react';\nimport ContactForm from './components/ContactForm/contactForm';\nimport ContactsList from './components/ContactsList/contactsList';\nimport Filter from './components/Filter/filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = e => {\n    const { name, number } = e;\n    return {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handlerOnSubmit = e => {\n    const newContacts = this.addContact(e);\n    const contactName = this.state.contacts.map(contact => contact.name);\n\n    if (contactName.includes(e.name)) {\n      alert(`${e.name} is already in contacts`);\n    } else {\n      const newContactsList = [...this.state.contacts, newContacts];\n      this.setState({ contacts: newContactsList });\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  componentDidMount() {\n    const contacts = window.localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      window.localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handlerOnSubmit} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactsList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"filter_filter__label__q6ecq\",\"filter__input\":\"filter_filter__input__tTHi6\",\"filter__name\":\"filter_filter__name__1PjLu\"};"],"sourceRoot":""}